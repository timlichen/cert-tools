# issuer information
issuer_url = https://www.codingdojo.com
issuer_email = admissions@codingdojo.com
issuer_name = Coding Dojo
issuer_id = https://www.blockcerts.org/samples/2.0/issuer-testnet.json
revocation_list=https://www.blockcerts.org/samples/2.0/revocation-list-testnet.json
issuer_signature_lines={"fields": [{"job_title": "Founder","signature_image": "images/issuer-signature.png","name": "Michael Choi"}]}
issuer_public_key=ecdsa-koblitz-pubkey:msBCHdwaQ7N2ypBYupkp6uNxtr9Pg76imj

# certificate information
certificate_description = In recognition of successfully completing the Onsite Immersive Program and demonstrating proficiency of web development fundamentals with the fullillment of all requirements necessary to issue the level of TODO: create custom belt fields
certificate_title = Certificate of Accomplishment
criteria_narrative=What is criteria_narrative?
badge_id = 82a4c9f2-3588-457b-80ea-da695571b8fc

# images
issuer_logo_file = images/dojo_logo.png
cert_image_file = images/certificate-image.png
issuer_signature_file = images/issuer-signature.png`

###################
## TEMPLATE DATA ##
###################

data_dir = sample_data
# template output directory
template_dir = certificate_templates
template_file_name = test_template.json

##############################
## INSTANTIATE BATCH CONFIG ##
##############################
unsigned_certificates_dir = unsigned_certificates
roster = rosters/roster_testnet.csv

################################
## TESTING BELT LEVEL OPTIONS ##
################################

# This information specifies the path in the larger assertion json body, and sets the value to a merge tag which is used in the templating process, and the coressponding roster column.

additional_per_recipient_fields = {"fields": [                  {"path":"$.Python","value": "*|PYTHON_PLACEHOLDER|*","csv_column":"Python"},{"path":"$.MEAN","value": "*|MEAN_PLACEHOLDER|*","csv_column": "MEAN"},{"path":"$.Java","value": "*|JAVA_PLACEHOLDER|*","csv_column": "Java"},{"path":"$.iOS","value": "*|IOS_PLACEHOLDER|*","csv_column": "iOS"},{"path":"$.WebFun","value": "*|WF_PLACEHOLDER|*","csv_column": "WebFun"},{"path":"$.RoR","value": "*|RoR_PLACEHOLDER|*","csv_column": "RoR"},{"path":"$.LAMP","value": "*|LAMP_PLACEHOLDER|*","csv_column": "LAMP"},{"path":"$.C_SHARP","value": "*|C#_PLACEHOLDER|*","csv_column": "C#"}]}

###################
## OTHER OPTIONS ##
###################

# whether to hash recipient emails, flag
# hash_emails

# can specify an array of additional global fields. For each additional field, you must indicate:
# - the jsonpath to the field
# - the global value to use
# additional_global_fields = {"fields": [{"path": "$.certificate.subtitle","value": "kim custom subtitle"}]}

# can specify an array of additional per-recipient fields. For each additional field, you must indicate:
# - the jsonpath to the field
# - the merge_tag placeholder to use
# - the csv column where the value (per recipient) can be found


# V1 only
# issuer_certs_url = http://certificates.issuer.org  # where the certificates are hosted